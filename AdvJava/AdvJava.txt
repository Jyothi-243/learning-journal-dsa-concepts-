creating a database: 
    create database db_name; 
    use db_name; //to go to that DB. 
    select database(); //to know we are in which database  
    show dbs; //it will show all databases.

creating table and inserting data: 
    create table table_name(col1 dataType, col2 dataType ....);
    Example: create table students (rno int, name varchar(100), class varchar(100))      //if rollno. and alphabets are mixed then we have to use varchar. 
    study mysql dataTypes. (int , BigInt , text , boolean , date , dateTime )
    show tables; //it will show all the tables in the current database. 

    inserting: 
    insert into table_name values (val1,val2,val2) //values are based on the column. 
    Example: insert into students values (12, "priya" , 'inter');

Reading/retrieving the data from the table;
    select * from students ; // "*" returns all columns.   
    select name, class from students;  //returns only name and class columns. means we can retrieve only specific columns also. kind of rule in the rows. 
    
    for the rows condition , we use where condition (for rows filtering)
    select * from students where rno=12;  // for varchar then we use Quotes where class = 'inter'; 

Update the data in the table: 
    update table_name set col = value;
    update students set name= 'jyothi" //it will set all the column values as "jyothi" , 
    update students set name = "jyothi" where class = 'inter' //it will update only the rows where the class is inter. 

Deleting data from the table: 
    delete from  table_name ;
    delete from students; 
    delete from students where rno = 12; only delete the persons whose rno is 12.  


Port for the mysql is 3306,  localhost or 127.0.0.1 
Oracle runs on the port 1521.  

JDBC Project in Ecllipse IDE: 


Servlet(extension for the servlet program is .java as those are java programs.) : Servlet is a java program which can run only in the server. (tomcat, jbose...), in servlets we have to use "response.getWriter" to display the data instead of system.out.println.
we use prepared stmt to avoid sql Injection. 
--> when we are passing the data , after submitting the form , we have to send that securily, (means in the url , we dont have to send the information, so we have to method = "POST", if we dont give anything then it will take Method = GET) ,   

JSP(java server pages): 
--> after the servlets jsp came, (extension -> .jsp ), for jsp file no need of the web.xml file and no need to compile and keep the .class file in classes folder. we can write the html code in jsp.
--> in Background it will create the , servlet program. 
--> in tomcat , we have to see the work folder, catalina,localhost, (there we can find all the )
--> JSPC will be there , so it will compile the whole jsp program.
--> To print in the browser, we use out.println and when we use system.out.println then it will be printed in the server. 

JSP Elements 


Creating a table : 
create table users(id int primary key AUTO_INCREMENT, name varchar(500), contact varchar(15), email varchar(250), address varchar(500), password varchar(100));     
desc tables; //to show the description of the table.

using col-span to occupy the number of rows. (col-span:2)



State Management :
-> while creating web applications, we use http protocol, (http is stateless protocol)
for managing the state, we use Hidden Variables, cookies, sessions , sessions with URL re-writing. 
-> for hidden variables , we have to move the hidden variables every time from server to the client (it tooks lots of burden , so we dont use this.)

Cookies: Creation : Cookie c1 = new Cookie(name,Value) //cookies will be created only once they will be transfered to the client. They will be stored in Clients browser. 
Cookiess : are special type of variable , they will get stored in the clients browser , 
or (small amount of info set by the server in client browser). (name value info).

Disadvantages in Cookies: 
when the users block the cookies, sensitive info .

Session: we have to create session object : creation : (session means when we visit website and close website and in-between is the session.)
HttpSession session = request.getSession(true);  // it will secure the sensitive data. (we can use session directly as it is implict variable)
session.setAttribute(); , getAttribute

Session with URL re-writing : 
when the user disables the cookies then we use this (kind of hidden variables concept(passing variables for every request))